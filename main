CREATE TABLE IF NOT EXISTS Genre_list (
id_genre SERIAL PRIMARY KEY,
name_genre VARCHAR(60) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Artist_list (
id_artist SERIAL PRIMARY KEY,
name_artist VARCHAR(60) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Genre_artist(
id_genre INTEGER REFERENCES Genre_list (id_genre),
id_artist INTEGER REFERENCES Artist_list (id_artist),
constraint pk_Genre_artist PRIMARY KEY (id_genre, id_artist)
);

CREATE TABLE IF NOT EXISTS Album_list (
id_album SERIAL PRIMARY KEY,
name_album VARCHAR(60) NOT NULL UNIQUE,
year_album INTEGER CHECK (year_album > 2000 and year_album < 2024)
);

CREATE TABLE IF NOT EXISTS Artist_album (
id_artist INTEGER REFERENCES Artist_list (id_artist),
id_album INTEGER REFERENCES Album_list (id_album),
constraint pk_Artist_album PRIMARY KEY (id_artist, id_album)
);

CREATE TABLE IF NOT EXISTS Track_list (
id_track SERIAL PRIMARY KEY,
id_album INTEGER NOT NULL REFERENCES Album_list (id_album),
name_track VARCHAR(120) NOT NULL,
length_track INTEGER NOT null constraint length_track check (length_track > 0), -- в секундах
constraint pk_Track_list UNIQUE (name_track, id_album)
);

CREATE TABLE IF NOT EXISTS Collection_list (
id_collection SERIAL PRIMARY KEY,
name_collection VARCHAR(60) NOT NULL,
year_collection INTEGER CHECK (year_collection > 2000 and year_collection < 2024)
);

CREATE TABLE IF NOT EXISTS Collection_track (
id_collection INTEGER REFERENCES Collection_list (id_collection),
id_track INTEGER REFERENCES Track_list (id_track),
constraint pk_Collection_track PRIMARY KEY (id_collection, id_track)
);

insert into Genre_list(id_genre, name_genre)
VALUES(1, 'Pock'),
      (2, 'Soul'),
      (3, 'Blues'),
      (4, 'Celtic'),
      (5, 'Ska-punk');

insert into Artist_list(id_artist, name_artist)
VALUES(1, 'Шевчук'),
      (2, 'Jon Bon Jovi'),
      (3, 'Amy Winehouse'),
      (4, 'Stevie Wonder'),
      (5, 'Eric Clapton'),
      (6, 'Чиграков'),
      (7, 'Loreena McKennitt'),
      (8, 'Шнуров');


insert into Genre_artist
VALUES(1, 1),
      (1, 2),
      (1, 8),
      (2, 3),
      (2, 4),
      (3, 5),
      (3, 6),
      (4, 7),
      (5, 8);

insert into Album_list(id_album, name_album , year_album)
VALUES(1, 'Единочество', 2003),
      (2, 'Творчество в пустоте 2', 2022),
      (3, 'Have a nice day', 2005),
      (4, 'What about now', 2013),
      (5, 'Rehab', 2015),
      (6, 'At The BBC', 2021),
      (7, 'Your Life Your Call', 2020),
      (8, 'Little Water Boy', 2020),
      (9, 'Carl Perkins & Friends', 2006),
      (10, 'Blues Breakers', 2016),
      (11, 'На грани изумруда', 2007),
      (12, 'Волопас', 2016),
      (13, 'A Midwinter Night', 2019),
      (14, 'Lost Souls', 2018),
      (15, 'Точка', 2002),
      (16, 'Всякое', 2018);

insert into Artist_album
VALUES(1, 1),
      (1, 2),
      (2, 3),
      (2, 4),
      (3, 5),
      (3, 6),
      (4, 7),
      (4, 8),
      (5, 9),
      (5, 10),
      (6, 11),
      (6, 12),
      (7, 13),
      (7, 14),
      (8, 15),
      (8, 16);


insert into Track_list(id_track, id_album, name_track , length_track)
VALUES(1, 1, 'Когда един', 206),
      (2, 1, 'Рождество', 148),
      (3, 2, 'В Раю одиноко', 248),
      (4, 2, 'Время твоей любви', 208),
      (5, 3, 'I am', 233),
      (6, 3, 'Bells of Freedom', 295),
      (7, 4, 'Army of One', 275),
      (8, 4, 'Pictures of You', 238),
      (9, 5, 'Vodafone Live At TBA', 220),
      (10, 5, 'Pharoahe Monch Remix', 216),
      (11, 6, 'Live From The Mercury Prize Awards', 230),
      (12, 6, 'Live On Jools Holland Hootenanny', 276),
      (13, 7, 'My Baby_s Gone', 150),
      (14, 7, 'Mary Ann', 179),
      (15, 8, 'Wondering', 172),
      (16, 8, 'Little Water Boy', 156),
      (17, 9, 'Honey Don_t', 246),
      (18, 9, 'What Kind of Girl ', 166),
      (19, 10, 'Little Girl', 156),
      (20, 10, 'Have You Heard', 358),
      (21, 11, 'Бронзовая птица ', 228),
      (22, 11, 'Мой дорогой, позвони мне рано утром', 224),
      (23, 12, 'Волопас (Левосторонний)', 325),
      (24, 12, 'Волопас (Правосторонний)', 325),
      (25, 13, 'Good King Wenceslas', 198),
      (26, 13, 'Snow', 307),
      (27, 14, 'A Hundred Wishes', 274),
      (28, 14, 'Lost Souls', 309),
      (29, 15, 'Злая пуля', 273),
      (30, 16, 'Эстетика', 163),
      (31, 16, 'Амплуа', 144),
      (32, 16, 'Цой', 158),
      (33, 16, 'Чашечки', 156);

insert into Collection_list(id_collection, name_collection , year_collection)
VALUES(1, 'Collection DDT', 2023),
      (2, 'Collection Bon Jovi', 2022),
      (3, 'Collection Amy Winehouse', 2021),
      (4, 'Collection Stevie Wonder', 2020),
      (5, 'Collection Eric Clapton', 2019),
      (6, 'Collection Чиж & Co', 2018),
      (7, 'Collection Loreena McKennitt', 2017),
      (8, 'Collection Ленинград', 2018);

insert into Collection_track(id_collection, id_track)
VALUES(1, 1),
      (1, 2),
      (1, 3),
      (1, 4),
      (2, 5),
      (2, 6),
      (2, 7),
      (2, 8),
      (3, 9),
      (3, 10),
      (3, 11),
      (3, 12),
      (4, 13),
      (4, 14),
      (4, 15),
      (4, 16),
      (5, 17),
      (5, 18),
      (5, 19),
      (5, 20),
      (6, 21),
      (6, 22),
      (6, 23),
      (6, 24),
      (7, 25),
      (7, 26),
      (7, 27),
      (7, 28),
      (8, 29),
      (8, 30),
      (8, 31),
      (8, 32);

--Продвинутая выборка данных


--количество исполнителей в каждом жанре !

select name_genre, count(id_artist) artist_q from Genre_list g
join genre_artist a on g.id_genre = a.id_genre
group by g.name_genre
order by artist_q desc;

--количество треков, вошедших в альбомы 2019-2020 годов !

select tl.name_track, al.year_album from album_list al
join track_list tl on al.id_album = tl.id_album
where al.year_album between 2019 and 2020;

--средняя продолжительность треков по каждому альбому !

select al.name_album, avg(tl.length_track) from album_list al
join track_list tl on al.id_album = tl.id_album
group by al.name_album
order by avg(tl.length_track) desc;

--все исполнители, которые не выпустили альбомы в 2020 году !

select al.name_artist from artist_list al
join artist_album aa on al.id_artist = aa.id_artist
join album_list al2 on aa.id_album = al2.id_album
where al2.year_album != 2020
group by al.name_artist;

--названия сборников, в которых присутствует конкретный исполнитель (выберите сами) !

select distinct name_collection from collection_list cl
join collection_track ct on cl.id_collection = ct.id_collection
join track_list tl on ct.id_track = tl.id_track
join album_list al on tl.id_album = al.id_album
join artist_album aa on al.id_album = aa.id_album
join artist_list al2 on aa.id_artist = al2.id_artist
where name_artist = 'Шнуров';

--название альбомов, в которых присутствуют исполнители более 1 жанра !

select distinct al.name_album, count(id_genre) from album_list al
join artist_album aa on al.id_album = aa.id_album
join artist_list al2 on aa.id_artist = al2.id_artist
join genre_artist ga on al2.id_artist = ga.id_artist
group by al.name_album
having count(id_genre) > 1;

-- наименование треков, которые не входят в сборники !

select tl.name_track from track_list tl
left join collection_track ct on tl.id_track = ct.id_track
where ct.id_track is null;

--исполнителя(-ей), написавшего самый короткий по продолжительности трек (теоретически таких треков может быть несколько)  !

select al.name_artist, tl.length_track from artist_list al
join artist_album aa on al.id_artist = aa.id_artist
join album_list al2 on aa.id_album = al2.id_album
join track_list tl on al2.id_album = tl.id_album
where tl.length_track = (select min(length_track) from track_list tl2)
order by length_track desc;


--название альбомов, содержащих наименьшее количество треков !

select al.name_album, count(*) from album_list al
join track_list tl on al.id_album = tl.id_album
group by al.name_album
order by count(*)
limit 1;
